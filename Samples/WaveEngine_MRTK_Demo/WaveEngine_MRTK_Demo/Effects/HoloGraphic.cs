//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WaveEngine_MRTK_Demo.Effects
{
    using WaveEngine.Common.Graphics;
    using WaveEngine.Framework.Graphics;
    using WaveEngine.Framework.Graphics.Effects;
    using WaveEngine.Mathematics;
    
    
    public class HoloGraphic : WaveEngine.Framework.Graphics.MaterialDecorator
    {
        
        public HoloGraphic(WaveEngine.Framework.Graphics.Effects.Effect effect) : 
                base(new Material(effect))
        {
        }
        
        public HoloGraphic(WaveEngine.Framework.Graphics.Material material) : 
                base(material)
        {
        }
        
        public WaveEngine.Mathematics.Matrix4x4 PerDrawCall_WorldViewProj
        {
            get
            {
                return this.material.CBuffers[0].GetBufferData<WaveEngine.Mathematics.Matrix4x4>(0);
            }
            set
            {
				this.material.CBuffers[0].SetBufferData(value, 0);
            }
        }
        
        public WaveEngine.Mathematics.Matrix4x4 PerDrawCall_World
        {
            get
            {
                return this.material.CBuffers[0].GetBufferData<WaveEngine.Mathematics.Matrix4x4>(64);
            }
            set
            {
				this.material.CBuffers[0].SetBufferData(value, 64);
            }
        }
        
        public WaveEngine.Mathematics.Vector3 Parameters_Color
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<WaveEngine.Mathematics.Vector3>(0);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 0);
            }
        }
        
        public float Parameters_Alpha
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(12);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 12);
            }
        }
        
        public WaveEngine.Mathematics.Vector3 Parameters_InnerGlowColor
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<WaveEngine.Mathematics.Vector3>(16);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 16);
            }
        }
        
        public float Parameters_InnerGlowAlpha
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(28);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 28);
            }
        }
        
        public float Parameters_InnerGlowPower
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(44);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 44);
            }
        }
        
        public float Parameters_MaxFingerDist
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(60);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 60);
            }
        }
        
        public WaveEngine.Mathematics.Vector3 Parameters_FingerPosLeft
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<WaveEngine.Mathematics.Vector3>(32);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 32);
            }
        }
        
        public WaveEngine.Mathematics.Vector3 Parameters_FingerPosRight
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<WaveEngine.Mathematics.Vector3>(48);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 48);
            }
        }
        
        public float Parameters_BorderWidth
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(64);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 64);
            }
        }
        
        public float Parameters_BorderMinValue
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(68);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 68);
            }
        }
        
        public float Parameters_FluentLightIntensity
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(72);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 72);
            }
        }
        
        public float Parameters_RoundCornerRadious
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(80);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 80);
            }
        }
        
        public float Parameters_RoundCornerMargin
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(84);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 84);
            }
        }
        
        public float Parameters_Cutoff
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(88);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 88);
            }
        }
        
        public float Parameters_EdgeSmoothingValue
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(92);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 92);
            }
        }
        
        public float Parameters_FadeBeginDistance
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(96);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 96);
            }
        }
        
        public float Parameters_FadeCompleteDistance
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(100);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 100);
            }
        }
        
        public float Parameters_FadeMinValue
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<System.Single>(104);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 104);
            }
        }
        
        public WaveEngine.Mathematics.Vector4 Parameters_HoverLightData
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<WaveEngine.Mathematics.Vector4>(320);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 320);
            }
        }
        
        public WaveEngine.Mathematics.Vector4 Parameters_ProximityLightData
        {
            get
            {
                return this.material.CBuffers[1].GetBufferData<WaveEngine.Mathematics.Vector4>(416);
            }
            set
            {
				this.material.CBuffers[1].SetBufferData(value, 416);
            }
        }
        
        public WaveEngine.Mathematics.Matrix4x4 PerCamera_MultiviewViewProj
        {
            get
            {
                return this.material.CBuffers[2].GetBufferData<WaveEngine.Mathematics.Matrix4x4>(0);
            }
            set
            {
				this.material.CBuffers[2].SetBufferData(value, 0);
            }
        }
        
        public int PerCamera_EyeCount
        {
            get
            {
                return this.material.CBuffers[2].GetBufferData<System.Int32>(160);
            }
            set
            {
				this.material.CBuffers[2].SetBufferData(value, 160);
            }
        }
    }
}
